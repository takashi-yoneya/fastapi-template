[tool.poetry]
name = "react-fastapi-sample"
version = "0.1.0"
description = ""
authors = ["Your Name <you@example.com>"]

[tool.poetry.dependencies]
python = "^3.10"
poethepoet = "^0.13.1"
uvicorn = "^0.17.6"
sentry-sdk = "^1.5.8"
fastapi = "^0.95.0"
pydantic = {extras = ["email", "dotenv"], version = "^1.9.0"}
python-dotenv = "^0.20.0"
mysqlclient = "^2.1.0"
ulid-py = "^1.1.0"
python-jose = "^3.3.0"
passlib = "^1.7.4"
toml = "^0.10.2"
PyYAML = "^6.0"
python-multipart = "^0.0.5"
python-json-logger = "^2.0.2"
mysql-connector-python = "^8.0.28"
bcrypt = "^3.2.0"
py = "^1.11.0"
humps = "^0.2.2"
inflection = "^0.5.1"
fire = "^0.4.0"
alembic = "^1.8.1"
sqlalchemyseed = "^1.0.6"
fastapi-debug-toolbar = "^0.3.2"
mangum = "^0.17.0"
pytest-mysql = "^2.3.1"
httpx = "^0.23.3"
SQLAlchemy = {extras = ["mypy"], version = "^2.0.0"}
aiomysql = "^0.1.1"
pytest-asyncio = "^0.20.3"

[tool.poetry.group.dev.dependencies]
locust = "^2.8.5"
black = "^22.3.0"
isort = "^5.10.1"
pytest = "^7.1.2"
mypy = "^0.950"
types-PyYAML = "^6.0.7"
types-toml = "^0.10.6"
autoflake = "^1.4"
pre-commit = "^2.18.1"
codespell = "^2.1.0"
bandit = "^1.7.4"
flake8 = "^6.0.0"
ruff = "^0.0.264"

[tool.black]
line-length = 120

# [tool.isort]
# profile = "black"
# line_length = 88
# multi_line_output = 3
# include_trailing_comma = true
# force_grid_wrap = 0

[tool.ruff]
target-version = "py310"
select = ["ALL"]
exclude = [".venv", "tests", "alembic"]
ignore = [
    "G004", # `logging-f-string`
    "PLC1901", # compare-to-empty-string
    "PLR2004", # magic-value-comparison
    "ANN101", # missing-type-self
    "ANN102", # missing-type-cls
    "ANN002", # missing-type-args
    "ANN003", # missing-type-kwargs
    "ANN401", # any-type
    "ERA", # commented-out-code
    "ARG002", # unused-method-argument
    "INP001", # implicit-namespace-package
    "PGH004", # blanket-noqa
    "B008", # Dependsで使用するため
    "A002", # builtin-argument-shadowing
    "A003", # builtin-attribute-shadowing
    "PLR0913", # too-many-arguments
    "RSE", # flake8-raise
    "D", # pydocstyle
    "C90", # mccabe
    "T20", # flake8-print
    "SLF", #  flake8-self
    "BLE", # flake8-blind-except
    "FBT", # flake8-boolean-trap
    "TRY", # tryceratops
    "COM", # flake8-commas
    "S", # flake8-bandit
    "EM",#flake8-errmsg
    "EXE", # flake8-executable
    "ICN", # flake8-import-conventions
    "RET",#flake8-return
    "SIM",#flake8-simplify
    "TCH", # flake8-type-checking
    "PTH", #pathlibを使わないコードが多いので、除外する
    "ISC", #flake8-implicit-str-concat
    "N", # pep8-naming
    "PT", # flake8-pytest-style
]
line-length = 120

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.poe.tasks]
test = {"cmd" = "pytest", help="pytestの実行"}
makemigrations = {"shell" = "alembic revision --autogenerate", help="DBマイグレーションファイルの自動作成"}
migrate = {"shell" = "alembic upgrade heads", help="DBマイグレーション"}
create-user = {"cmd" = "python commands/user_creation.py", help="ユーザー作成"}
pre-commit = {"cmd" = "pre-commit", help="pre-commit処理の実行(commit自体は行わない)"}
drop-all-tables = {"cmd" = "python seeder/run.py drop_all_tables", help=""}
import-seed = {"cmd" = "python seeder/run.py import_seed", help=""}
init-all-tables = ["drop-all-tables", "migrate", "import-seed"]


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
